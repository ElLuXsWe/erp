name: CI/CD - ERP Backend y Frontend

on:
  push:
    branches:
      - '**'

jobs:
  backend-tests:
    name: Backend - Pruebas unitarias y cobertura
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: erp-backend
    steps:
      - uses: actions/checkout@v3

      - name: Cachear dependencias backend
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-backend-${{ hashFiles('package-lock.json') }}

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - run: npm install

      - run: npx jest --coverage

  frontend-tests:
    name: Frontend - Pruebas unitarias y cobertura
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: erp-front
    steps:
      - uses: actions/checkout@v3

      - name: Cachear dependencias frontend
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-frontend-${{ hashFiles('package-lock.json') }}

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - run: npm install

      - run: npm test -- --coverage

  deploy:
    name: Build y Despliegue (solo en rama principal)
    runs-on: ubuntu-latest
    needs:
      - backend-tests
      - frontend-tests
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Backend build
      - name: Instalar dependencias backend
        run: npm install
        working-directory: erp-backend

      - name: Build backend
        run: npm run build
        working-directory: erp-backend

      # Frontend build
      - name: Instalar dependencias frontend
        run: npm install
        working-directory: erp-front

      - name: Build frontend
        run: npm run build
        working-directory: erp-front